JAVA 国内面试 基础知识点

什么是Java虚拟机？为什么Java被称作是“平台无关的编程语言”？
static关键字是什么意思？Java中是否可以覆盖(override)一个private或者是static的方法？-baidu 1point3acres
是否可以在static环境中访问非static变量？
Java中的方法覆盖(Overriding)和方法重载(Overloading)是什么意思？
Java中，什么是构造函数？什么是构造函数重载？什么是复制构造函数？
Java支持多继承么？
接口和抽象类的区别是什么？
什么是值传递和引用传递？. check 1point3acres for more.
java创建线程有几种不同的方式？你喜欢哪一种？为什么？
概括的解释下线程的几种可用状态。
同步方法和同步代码块的区别是什么？
Java集合类框架的基本接口有哪些？
为什么集合类没有实现Cloneable和Serializable接口？
什么是迭代器(Iterator)？
Java中的HashMap的工作原理是什么？ConcurrentHashMap呢？
hashCode()和equals()方法的重要性体现在什么地方？
数组(Array)和列表(ArrayList)有什么区别？什么时候应该使用Array而不是ArrayList？
ArrayList和LinkedList有什么区别？
java的动态代理机制是怎样的？

如何权衡是使用无序的数组还是有序的数组？
Enumeration接口和Iterator接口的区别有哪些？
Java中垃圾回收有什么目的？什么时候进行垃圾回收？
finalize()方法什么时候被调用？析构函数(finalization)的目的是什么？
如果对象的引用被置为null，垃圾收集器是否会立即释放对象占用的内存？ 
Java堆的结构是什么样子的？什么是堆中的永久代(Perm Gen space)?
串行(serial)收集器和吞吐量(throughput)收集器的区别是什么？
在Java中，对象什么时候可以被垃圾回收？
JVM的永久代中会发生垃圾回收么？
Java中的两种异常类型是什么？他们有什么区别？
Java中Exception和Error有什么区别？
throw和throws有什么区别？
异常处理完成以后，Exception对象会发生什么变化？
异常处理的时候，finally代码块的重要性是什么？
finally代码块和finalize()方法有什么区别？
java类是如何被虚拟机加载的？生命周期又是怎样的？







数据库 国内面试 基础知识点
1. 索引的作用？和它的优点缺点是什么？使用索引查询一定能提高查询的性能吗？为什么？
    作用,优点:  提升检索效率 (索引只建立在经常用到的条件字段)
    缺点: 它所生成的索引文件会占用大量的磁盘空间，并且在对SELECT以外的操作时会相对的降低了效率
          索引在 提高查询速度 的同时，降低了增删改三者的执行效率


    Mysql 共支持5种索引
        PRIMARY KEY 主键索引: 主键是一种唯一性索引，每个表只能有一个主键

        INDEX 普通索引: 这是最基本的索引类型，而且它没有唯一性之类的限制。

        UNIQUE 唯一索引: 这种索引和前面的“普通索引”基本相同，但有一个区别：索引列的所有值都只能出现一次，即必须唯一。

        FULLTEXT 全文索引

        组合索引（较特殊）:会一次检索n条索引，直到找出相应的数据返回

Mysql 两种索引的区别
    B-tree   Balance Tree 的结构来存储的，也就是所有实际需要的数据都存放于 Tree 的           Leaf Node 
             B+树在查找单条记录的速度虽然比不上Hash索引，但是因为更适合 排序 等操作
    Hash：   Hash 索引仅仅能满足"=","IN"和"<=>" 等值查询，不能使用 范围查询


2.什么是内存泄漏？如何避免内存泄露？
3.如何维护数据库的完整性和一致性？
4.什么是事务？什么是锁？
5.事务四大特性是什么？事务的隔离级别有哪些？
6.什么是主键?什么是外键?
7.对一个投入使用的在线事务处理表格有过多索引需要有什么样的性能考虑?
8.什么是数据模型？什么是规范化？
9.谈谈数据库设计的三范式
10.数据库的乐观锁和悲观锁是什么？
11.什么是死锁？如何避免死锁？如何处理死锁问题？

计算机网络

1. 电路交换与分组交换的区别？ 优劣对比。
2. OSI有哪几层，会画出来，知道主要几层的各自作用。
3. TCP/IP有哪几层，会画出来，知道所有层数的作用，会列举各层主要的协议名称。
4. 硬件(MAC)地址的概念及作用。
5. ARP协议的用途 及算法、在哪一层上会使用arp？. check 1point3acres for more.
6. CRC冗余校验算法，反码和检验算法。
7. 如何实现透明传输。
8. 知道各个层使用的是哪个数据交换设备。（交换机、路由器、网关）
9.  路由表的内容。
10. 分组转发算法。
11.IP报文的格式，格式的各个字段的含义要理解。
12. MTU的概念，啥叫路径MTU？MTU发现机制，TraceRoute(了解)。
13. RIP协议的概念 及算法。
14. ICMP协议的主要功能。
15. 组播和多播的概念，IGMP的用途。
16. Ping协议的实现原理，ping命令格式。
17.子网划分的概念，子网掩码。
18.IP地址的分类，如何划分的，及会计算各类地址支持的主机数。
19. DNS的概念，用途，DNS查询的实现算法。
    


20.TCP与UDP的概念，相互的区别及优劣。
21. UDP报文的格式，字段的意义。
22.TCP报文的格式，字段的意义。
23. TCP通过哪些措施，保证传输可靠？
24.三次握手，四次断开过程。
25.TIME_WAIT状态的概念及意义。
26. 滑动窗口协议 与 停止等待协议的区别。
27.TCP的流量控制和拥塞控制实现原理(会画拥塞控制的典型图)。
28. TCP的快速重传与快速恢复算法。
29. TFTP与FTP的区别。
30. 阻塞方式和非阻塞方式，阻塞connect与非阻塞connect。(比较难，有兴趣可以了解)
31.HTTP基本格式。

Cookie Session 区别
    session 在服务器端，cookie 在客户端（浏览器）
    session 默认被存在在服务器的一个文件里（不是内存）
    session 的运行依赖 session id，而 session id 是存在 cookie 中的，也就是说，如果浏览器禁用了 cookie ，同时 session 也会失效（但是可以通过其它方式实现，比如在 url 中传递 session_id）
    session 可以放在 文件、数据库、或内存中都可以。
    用户验证这种场合一般会用 session 因此，维持一个会话的核心就是客户端的唯一标识，即 session id

    Session是在服务端保存的一个数据结构，用来跟踪用户的状态，这个数据可以保存在集群、数据库、文件中；
    Cookie是客户端保存用户信息的一种机制，用来记录用户的一些信息，也是实现Session的一种方式。
 



从输入URL到页面加载发生了什么        https://segmentfault.com/a/1190000006879700
    DNS解析

    TCP连接

    发送HTTP请求

    服务器处理请求并返回HTTP报文

    浏览器解析渲染页面

    连接结束

1.DNS解析 ： 
    寻找哪台机器上有你需要资源的过程。当你在浏览器中输入一个地址时，例如 www.google.com，其实不是百度网站真正意义上的地址。
    互联网上每一台计算机的唯一标识是它的IP地址，但是IP地址并不方便记忆。用户更喜欢用方便记忆的网址去寻找互联网上的其它计算机，也就是上面提到的百度的网址。
    所以互联网设计者需要在 用户的 方便性与可用性 做一个权衡，这个权衡就是网址到IP地址的转换，这个过程就是DNS解析。
    它实际上充当了一个翻译的角色，实现了网址到IP地址的转换。

    这个解析是分级的 先从本地域名服务器 到 根域名服务器 再到 COM顶级域名服务器 再到具体的 google.com 域名服务器, 最后返回本地域名服务器

    同时有个 DNS高速缓存, 把 www.google.com 的ip记录到高速缓存一阵子，这样子避免了再找一大圈子。
                浏览器缓存，系统缓存，路由器缓存，IPS服务器缓存，根域名服务器缓存，顶级域名服务器缓存，主域名服务器缓存

    DNS 负载均衡
        其实真实的互联网世界背后存在成千上百台服务器，大型的网站甚至更多。但是在用户的眼中，它需要的只是处理他的请求，哪台机器处理请求并不重要。
        DNS可以返回一个合适的机器的IP给用户，例如可以根据每台机器的负载量，该机器离用户地理位置的距离等等，这种过程就是DNS负载均衡


2.TCP连接
    HTTP协议是使用TCP作为其传输层协议的

    HTTPS协议
        HTTP报文是包裹在TCP报文中发送的，服务器端收到TCP报文时会解包提取出HTTP报文。
        但是这个过程中存在一定的风险，HTTP报文是明文，如果中间被截取的话会存在一些信息泄露的风险。
        那么在进入TCP报文之前对HTTP做一次加密就可以解决这个问题了。HTTPS协议的本质就是HTTP + SSL(or TLS)。
        在HTTP报文进入TCP报文之前，先使用 SSL 对HTTP报文进行加密。(加密过程处在TCP 和 HTTP之间)

    HTTPS过程
        HTTPS在传输数据之前需要客户端与服务器进行一个握手(TLS/SSL握手)，在握手过程中将确立双方加密传输数据的密码信息。
        TLS/SSL使用了非对称加密，对称加密以及hash等。
        SSL(Secure Sockets Layer 安全套接层),及其继任者传输层安全（Transport Layer Security，TLS）是为网络通信提供安全及数据完整性的一种安全协议。
        HTTPS相比于HTTP，虽然提供了安全保证，但是势必会带来一些时间上的损耗，如握手和加密等过程，是否使用HTTPS需要根据具体情况在安全和性能方面做出权衡。



3.发送HTTP请求

    它主要发生在客户端。发送HTTP请求的过程就是构建HTTP请求报文并通过TCP协议中发送到服务器指定端口(HTTP协议80/8080, HTTPS协议443)。
    HTTP请求报文是由三部分组成: 请求行, 请求报头和请求正文。

    请求行 ：Method Request-URL HTTP-Version CRLF
           eg: GET index.html HTTP/1.1
           常用的Method有: GET, POST, PUT, DELETE, OPTIONS, HEAD。
    请求报头 ：
            请求报头允许客户端向服务器传递请求的附加信息和客户端自身的信息。
            常见的请求报头有: Accept, Accept-Charset, Accept-Encoding, Accept-Language, Content-Type, Authorization, Cookie, User-Agent等。
    请求正文 ： 
            当使用POST, PUT等方法时，通常需要客户端向服务器传递数据。
            现在的Web应用通常采用Rest架构，请求的数据格式一般为json。这时就需要设置Content-Type: application/json。

4.服务器处理请求并返回HTTP报文
    HTTP响应报文也是由三部分组成: 状态码, 响应报头和响应报文。
    状态码
        状态码是由3位数组成，第一个数字定义了响应的类别，且有五种可能取值:

        1xx：指示信息–表示请求已接收，继续处理。

        2xx：成功–表示请求已被成功接收、理解、接受。

        3xx：重定向–要完成请求必须进行更进一步的操作。

        4xx：客户端错误–请求有语法错误或请求无法实现。

        5xx：服务器端错误–服务器未能实现合法的请求。

    响应报头 ：  常见的响应报头字段有: Server, Connection...。
            
    响应报文
        服务器返回给浏览器的文本信息，通常HTML, CSS, JS, 图片等文件就放在这一部分。


5. 浏览器解析渲染页面    显示出来






操作系统

1. 进程的有哪几种状态，状态转换图，及导致转换的事件。
2. 进程与线程的区别。
3. 进程通信的几种方式。
4. 线程同步几种方式。(一定要会写生产者、消费者问题，完全消化理解)
5. 线程的实现方式. (也就是用户线程与内核线程的区别)
6. 用户态和核心态的区别。
7. 用户栈和内核栈的区别。
8. 内存池、进程池、线程池。(c++程序员必须掌握)
9. 死锁的概念，导致死锁的原因.
10. 导致死锁的四个必要条件。
11. 处理死锁的四个方式。
12. 预防死锁的方法、避免死锁的方法。
13. 进程调度算法。
14. Windows内存管理的方式(块式、页式、段式、段页式).
15. 内存连续分配方式采用的几种算法及各自优劣。
16. 动态链接及静态链接.
17. 基本分页、请求分页储存管理方式。
18. 基本分段、请求分段储存管理方式。
19. 分段分页方式的比较各自优缺点。
20. 几种页面置换算法，会算所需换页数。(LRU用程序如何实现？)
21. 虚拟内存的定义及实现方式。
22.操作系统的四个特性。
23. DMA。
24. Spooling。
25. 外存分配的几种方式，及各种优劣。


1.5 spring面试题

什么是Spring框架？Spring框架有哪些主要模块？


使用Spring框架有什么好处？
什么是控制反转（IOC）？什么是依赖注入？


请解释下Spring中的IOC？
BeanFactory和ApplicationContext有什么区别？
将Spring配置到你的应用中共有几种方法？

什么基于XML的配置？
什么基Java的配置？
怎样用注解的方式配置Spring？
描述Spring Bean的生命周期？
描述Spring中各种Bean的范围？
什么是Spring的嵌入beans？
Spring框架中的单例bean是否是线程安全的？
请举例说明如何用Spring注入一个Java的集合类？
请举例说明如何在Spring的Bean中注入一个java.util.Properties？
请解释Spring的Bean的自动生成原理？
请辨析自动生成Bean之间模块的区别？

如何开启基于基于注解的自动写入？
    请举例说明@Required注解？
    请举例说明@Autowired注解？
    请举例说明@Qualifier注解？
    
请说明构造器注入和setter方法注入之间的区别？
Spring框架中不同类型event有什么区别？
FileSystemResource和ClassPathResource有何区别？
请列举Spring框架中用了哪些设计模式？
